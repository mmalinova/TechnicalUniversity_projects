#include "stdafx.h"
#include "Agency.h"
#include <string.h>
#include <iostream>

using namespace std;

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Agency::Agency()
{
	name[0] = 0;
	A[0] = 0;
	numberOfEstates = 0;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Agency::Agency(char *pname)
{
	strcpy_s(name, pname);
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Agency::~Agency()
{

}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
int Agency::Add(Estate &Es)
{
	if (numberOfEstates >= 100)
		return 0;
	if (Search(Es.getAddress()) >= 0)
		return 0;
	A[numberOfEstates] = &Es;
	numberOfEstates++;
	return 1;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
int Agency::Remove(char *paddress)
{
	if (numberOfEstates == 0)
		return 0;
	if (Search(paddress) < 0)
		return 0;
	else
	{
		for (int i = Search(paddress); i < numberOfEstates - 1; ++i)
		{
			A[i] = A[i + 1];
		}
		numberOfEstates--;
		return 1;
	}
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
int Agency::Search(char *paddress)
{
	for (int i = 0; i < numberOfEstates; i++)
	{
		if (strcmp(A[i]->getAddress(), paddress) == 0)
			return i;
	}
	return -1;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
void Agency::Search(double price1, double price2)
{
	for (int i = 0; i < numberOfEstates; i++)
	{
		if (A[i]->getPrice() >= price1 &&  A[i]->getPrice() <= price2)
			A[i]->Print();
	}
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
int cf(void *el1, void *el2)
{
	Estate *p1 = (Estate *) el1;
	Estate *p2 = (Estate *) el2;
	return p1->price > p2->price;
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
void Agency::Print()
{
	for (int i = 0; i < numberOfEstates; i++)
	{
		A[i]->Print();
	}
}
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------